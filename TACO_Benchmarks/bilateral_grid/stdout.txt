inlined interpolated
inlined repeat_edge
is singleton2 output 0
mem bilateral_grid update 0
mem interpolated update 0
is singleton2 output 0
mem blury update 0
mem blurx update 0
is singleton4 output 0
mem blurz update 0
mem histogram update 0
mem histogram update 1
mem repeat_edge update 0
// Target: x86-64-linux-avx-avx2-cuda-cuda_capability_61-f16c-fma-no_runtime-sse41
// MachineParams: 14,16777216,4

// Delete this line if not using Generator
Pipeline pipeline = get_pipeline();

Var x_i("x_i");
Var x_o("x_o");
Var y_i("y_i");
Var y_o("y_o");

Func bilateral_grid = pipeline.get_func(8);
Func blurx = pipeline.get_func(5);
Func blury = pipeline.get_func(6);
Func blurz = pipeline.get_func(4);
Func histogram = pipeline.get_func(3);

{
    Var x = bilateral_grid.args()[0];
    Var y = bilateral_grid.args()[1];
    bilateral_grid
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 32)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = blurx.args()[0];
    Var y = blurx.args()[1];
    Var z = blurx.args()[2];
    Var c = blurx.args()[3];
    blurx
        .compute_at(blury, x_o)
        .reorder(c, z, x, y)
        .gpu_threads(x)
        .gpu_threads(y);
}
{
    Var x = blury.args()[0];
    Var y = blury.args()[1];
    Var c = blury.args()[3];
    blury
        .compute_root()
        .split(x, x_o, x_i, 8)
        .split(y, y_o, y_i, 28)
        .reorder(z, c, x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = blurz.args()[0];
    Var y = blurz.args()[1];
    Var c = blurz.args()[3];
    blurz
        .compute_root()
        .split(x, x_o, x_i, 8)
        .split(y, y_o, y_i, 8)
        .reorder(z, c, x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = histogram.args()[0];
    Var y = histogram.args()[1];
    Var z = histogram.args()[2];
    Var c = histogram.args()[3];
    RVar r$x(histogram.update(0).get_schedule().rvars()[0].var);
    RVar r$y(histogram.update(0).get_schedule().rvars()[1].var);
    histogram
        .compute_at(blurz, x_o)
        .reorder(c, z, x, y)
        .gpu_threads(x)
        .gpu_threads(y);
    histogram.update(0)
        .reorder(c, r$x, r$y, x, y)
        .gpu_threads(x)
        .gpu_threads(y);
}


TOTAL INLINES 2
