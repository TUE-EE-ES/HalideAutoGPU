g name output
GROUP OF output
SH MEM 12288.000000
 ACT THR 1024.000000f
 OCC 0.500000f
inlined vert
g name slice_for_radius
g name sum
g name sum
g name vert_log
inlined repeat_edge
g name vert_log
// Target: x86-64-linux-avx-avx2-cuda-cuda_capability_61-f16c-fma-no_asserts-sse41
// MachineParams: 32,16777216,4

// Delete this line if not using Generator
Pipeline pipeline = get_pipeline();

Var t_i("t_i");
Var t_o("t_o");
Var x_i("x_i");
Var x_o("x_o");
Var y_i("y_i");
Var y_o("y_o");

Func maximum = pipeline.get_func(8);
Func output = pipeline.get_func(9);
Func slice_for_radius = pipeline.get_func(2);
Func sum = pipeline.get_func(0);
Func vert_log = pipeline.get_func(6);

{
    Var x = maximum.args()[0];
    Var y = maximum.args()[1];
    Var c = maximum.args()[2];
    RVar dx$x(maximum.update(0).get_schedule().rvars()[0].var);
    maximum
        .reorder(c, x, y)
        .compute_at(output, x_o)
        .gpu_threads(x)
        .gpu_threads(y)
        .unroll(c);
    maximum.update(0)
        .reorder(c, dx$x, x, y)
        .gpu_threads(x)
        .gpu_threads(y)
        .unroll(c);
}
{
    Var x = output.args()[0];
    Var y = output.args()[1];
    Var c = output.args()[2];
    output
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 32)
        .reorder(c, x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .unroll(c)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var t = slice_for_radius.args()[0];
    slice_for_radius
        .compute_root()
        .split(t, t_o, t_i, 2)
        .reorder(t_i, t_o)
        .gpu_threads(t_i)
        .gpu_blocks(t_o);
}
{
    Var x = sum.args()[0];
    sum
        .compute_root()
        .split(x, x_o, x_i, 2)
        .reorder(x_i, x_o)
        .gpu_threads(x_i)
        .gpu_blocks(x_o)
        .compute_root()
        .gpu_single_thread();
    sum.update(0)
        .gpu_single_thread()
        .gpu_blocks(x)
        .gpu_single_thread();
}
{
    Var x = vert_log.args()[0];
    Var y = vert_log.args()[1];
    Var c = vert_log.args()[2];
    Var t = vert_log.args()[3];
    RVar r$y(vert_log.update(0).get_schedule().rvars()[1].var);
    vert_log
        .compute_root()
        .split(x, x_o, x_i, 16)
        .split(y, y_o, y_i, 8)
        .reorder(c, t, x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .unroll(c)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o)
        .compute_root();
    vert_log.update(0)
        .split(x, x_o, x_i, 32, TailStrategy::RoundUp)
        .reorder(r$x, r$y, x_i, x_o, c)
        .gpu_threads(x_i)
        .gpu_blocks(c)
        .gpu_blocks(x_o);
}


TOTAL INLINES 2
