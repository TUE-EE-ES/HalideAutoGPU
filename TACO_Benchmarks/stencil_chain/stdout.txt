g name output
g name stage_0
inlined repeat_edge
g name stage_1
g name stage_10
g name stage_11
g name stage_12
g name stage_13
g name stage_14
g name stage_15
g name stage_16
g name stage_17
g name stage_18
g name stage_19
g name stage_2
g name stage_20
g name stage_21
g name stage_22
g name stage_23
g name stage_24
g name stage_25
g name stage_26
g name stage_27
g name stage_28
g name stage_29
g name stage_3
g name stage_30
g name stage_4
g name stage_5
g name stage_6
g name stage_7
g name stage_8
g name stage_9
// Target: x86-64-linux-avx-avx2-cuda-cuda_capability_61-f16c-fma-no_runtime-sse41
// MachineParams: 32,16777216,4

// Delete this line if not using Generator
Pipeline pipeline = get_pipeline();

Var x_i("x_i");
Var x_o("x_o");
Var y_i("y_i");
Var y_o("y_o");

Func output = pipeline.get_func(35);
Func stage_0 = pipeline.get_func(3);
Func stage_1 = pipeline.get_func(4);
Func stage_10 = pipeline.get_func(13);
Func stage_11 = pipeline.get_func(14);
Func stage_12 = pipeline.get_func(15);
Func stage_13 = pipeline.get_func(16);
Func stage_14 = pipeline.get_func(17);
Func stage_15 = pipeline.get_func(18);
Func stage_16 = pipeline.get_func(19);
Func stage_17 = pipeline.get_func(20);
Func stage_18 = pipeline.get_func(21);
Func stage_19 = pipeline.get_func(22);
Func stage_2 = pipeline.get_func(5);
Func stage_20 = pipeline.get_func(23);
Func stage_21 = pipeline.get_func(24);
Func stage_22 = pipeline.get_func(25);
Func stage_23 = pipeline.get_func(26);
Func stage_24 = pipeline.get_func(27);
Func stage_25 = pipeline.get_func(28);
Func stage_26 = pipeline.get_func(29);
Func stage_27 = pipeline.get_func(30);
Func stage_28 = pipeline.get_func(31);
Func stage_29 = pipeline.get_func(32);
Func stage_3 = pipeline.get_func(6);
Func stage_30 = pipeline.get_func(33);
Func stage_4 = pipeline.get_func(7);
Func stage_5 = pipeline.get_func(8);
Func stage_6 = pipeline.get_func(9);
Func stage_7 = pipeline.get_func(10);
Func stage_8 = pipeline.get_func(11);
Func stage_9 = pipeline.get_func(12);

{
    Var x = output.args()[0];
    Var y = output.args()[1];
    output
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_0.args()[0];
    Var y = stage_0.args()[1];
    stage_0
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 8)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_1.args()[0];
    Var y = stage_1.args()[1];
    stage_1
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_10.args()[0];
    Var y = stage_10.args()[1];
    stage_10
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_11.args()[0];
    Var y = stage_11.args()[1];
    stage_11
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_12.args()[0];
    Var y = stage_12.args()[1];
    stage_12
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_13.args()[0];
    Var y = stage_13.args()[1];
    stage_13
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_14.args()[0];
    Var y = stage_14.args()[1];
    stage_14
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_15.args()[0];
    Var y = stage_15.args()[1];
    stage_15
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_16.args()[0];
    Var y = stage_16.args()[1];
    stage_16
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_17.args()[0];
    Var y = stage_17.args()[1];
    stage_17
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_18.args()[0];
    Var y = stage_18.args()[1];
    stage_18
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_19.args()[0];
    Var y = stage_19.args()[1];
    stage_19
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_2.args()[0];
    Var y = stage_2.args()[1];
    stage_2
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_20.args()[0];
    Var y = stage_20.args()[1];
    stage_20
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_21.args()[0];
    Var y = stage_21.args()[1];
    stage_21
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_22.args()[0];
    Var y = stage_22.args()[1];
    stage_22
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_23.args()[0];
    Var y = stage_23.args()[1];
    stage_23
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_24.args()[0];
    Var y = stage_24.args()[1];
    stage_24
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_25.args()[0];
    Var y = stage_25.args()[1];
    stage_25
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_26.args()[0];
    Var y = stage_26.args()[1];
    stage_26
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_27.args()[0];
    Var y = stage_27.args()[1];
    stage_27
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_28.args()[0];
    Var y = stage_28.args()[1];
    stage_28
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_29.args()[0];
    Var y = stage_29.args()[1];
    stage_29
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_3.args()[0];
    Var y = stage_3.args()[1];
    stage_3
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_30.args()[0];
    Var y = stage_30.args()[1];
    stage_30
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_4.args()[0];
    Var y = stage_4.args()[1];
    stage_4
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_5.args()[0];
    Var y = stage_5.args()[1];
    stage_5
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_6.args()[0];
    Var y = stage_6.args()[1];
    stage_6
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_7.args()[0];
    Var y = stage_7.args()[1];
    stage_7
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_8.args()[0];
    Var y = stage_8.args()[1];
    stage_8
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}
{
    Var x = stage_9.args()[0];
    Var y = stage_9.args()[1];
    stage_9
        .compute_root()
        .split(x, x_o, x_i, 32)
        .split(y, y_o, y_i, 16)
        .reorder(x_i, y_i, x_o, y_o)
        .gpu_threads(x_i)
        .gpu_threads(y_i)
        .gpu_blocks(y_o)
        .gpu_blocks(x_o);
}


TOTAL INLINES 1
